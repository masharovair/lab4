# пирамидальная сортировка

from random import randint
a = [randint(0, 100) for i in range(int(input('Число элементов в массиве: ')))]
print('Исходный массив: ', *a)

def heap(a, i, n):
    left, right, maxi = 2 * i + 1, 2 * i + 2, i
    if left <= n and a[left] > a[maxi]:
         maxi = left
    if right <= n and a[right] > a[maxi]:
         maxi = right
    if maxi == i:
         return
    else:
         a[maxi], a[i] = a[i], a[maxi]
         heap(a, maxi, n)

def max_heap(a):
    middle = len(a) // 2
    for i in reversed(range(0, middle + 1)):
         heap(a, i, len(a) - 1)

def heap_sort(a):
     max_heap(a)
     for i in reversed(range(0, len(a))):
         a[0], a[i] = a[i], a[0]
         heap(a, 0, i - 1)

heap_sort(a)
print('Отсортированный массив: ', *a)



# блочная сортировка

def vsort(bucket):
    for i in range (1, len (bucket)):
        k = bucket[i]
        j = i - 1
        while (j >= 0 and k < bucket[j]):
            bucket[j + 1] = bucket[j]
            j = j - 1
        bucket[j + 1] = k
        
def bsort(a):
    maxi = max(a)
    s = maxi/len(a)
    buckets= []
    for i in range(len(a)):
        buckets.append([]) 
    for i in range(len(a)):
        j = int (a[i] / s)
        if j != len (a):
            buckets[j].append(a[i])
        else:
            buckets[len(a) - 1].append(a[i])
    for i in range(len(a)):
        vsort(buckets[i])
    res = []
    for i in range(len (a)):
        res = res + buckets[i]
    return res
    
a = []
print('Длинна массива: ')
n = int(input())
print('Введите массив: ')
for i in range(n):
    a.append(int(input()))
print('Исходный массив: ')
print(a)
sorted = bsort(a)
print('Отсортерованный массив: ')
print(sorted)
